<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CinemaWpf</name>
    </assembly>
    <members>
        <member name="M:CinemaWpf.Commands.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of <see cref="!:DelegateCommand&lt;T&gt;"/>.
            </summary>
            <param name="execute">Delegate to execute when Execute is called on the command.  This can be null to just hook up a CanExecute delegate.</param>
            <remarks><seealso cref="M:CinemaWpf.Commands.RelayCommand`1.CanExecute(System.Object)"/> will always return true.</remarks>
        </member>
        <member name="M:CinemaWpf.Commands.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="M:CinemaWpf.Commands.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="E:CinemaWpf.Commands.RelayCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:CinemaWpf.Commands.RelayCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <see langword="null" />.</param>
        </member>
        <member name="M:CinemaWpf.Commands.SaveShowingCommand.#ctor(CinemaWpf.ViewModel.ShowingViewModel)">
            <summary>
            Initialize a new instance of the SaveShowingCommand class.
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="M:CinemaWpf.Commands.SaveReservationCommand.#ctor(CinemaWpf.ViewModel.ReservationViewModel)">
            <summary>
            Initialize a new instance of the AddMovieCommandn class.
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="M:CinemaWpf.Commands.SaveMovieCommand.#ctor(CinemaWpf.ViewModel.MovieViewModel)">
            <summary>
            Initialize a new instance of the AddMovieCommandn class.
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="T:CinemaWpf.Controllers.MovieController">
            <summary>
            This class is responsible for delegate request to MovieService from Infrustructure Layer .
            </summary>
        </member>
        <member name="M:CinemaWpf.Controllers.MovieController.#ctor">
            <summary>
            Initialize a new instance of MovieController class.
            </summary>
        </member>
        <member name="M:CinemaWpf.Controllers.MovieController.GetMovies">
            <summary>
            Initializes list of movies.
            </summary>
            <returns>ObservableCollection of all movies.</returns>
        </member>
        <member name="M:CinemaWpf.Controllers.MovieController.Post(CinemaWpf.Model.Movie)">
            <summary>
            Adds or update the movie.
            </summary>
            <param name="model"></param>
            <returns>Returns true if operation succeed.</returns>
        </member>
        <member name="M:CinemaWpf.Controllers.MovieController.Delete(CinemaWpf.Model.Movie)">
            <summary>
            Deletes the movie.
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:CinemaWpf.Controllers.ReservationController">
            <summary>
            This class is responsible for delegate request to ReservationService from Infrustructure Layer .
            </summary>
        </member>
        <member name="M:CinemaWpf.Controllers.ReservationController.#ctor">
            <summary>
            Initializes a new instance of ReservatonController class.
            </summary>
        </member>
        <member name="M:CinemaWpf.Controllers.ReservationController.GetReservations">
            <summary>
            Gets list of Customer - Reservation data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ReservationController.GetSeats(System.Int32)">
            <summary>
            Gets list of seats for the showing with information of reserved and sold seats.
            </summary>
            <param name="id">is the id of the showing.</param>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ReservationController.Post(CinemaWpf.Model.CustomerReservation)">
            <summary>
            Adds the reservation.
            </summary>
            <param name="model">CustomerReservation model from ViewModel in which are customer and reservation to save.</param>
            <returns>Returns true if command succeed.</returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ReservationController.Delete(CinemaWpf.Model.CustomerReservation)">
            <summary>
            Deletes the reservation.
            </summary>
            <param name="model">ith information which reservation shoud be removed.</param>
        </member>
        <member name="M:CinemaWpf.Controllers.ReservationController.Confirm(CinemaWpf.Model.CustomerReservation)">
            <summary>
            Confirms the reservation. Changes status from '0' to '1'.
            </summary>
            <param name="model">with information which reservation should be confirmed.</param>
            <returns>Returns true if command succeed.</returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ShowingController.GetShowings">
            <summary>
            Gets list of all showings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ShowingController.GetActuall(System.Int32)">
            <summary>
            Gets list of actuall showings.
            </summary>
            <param name="n">n is a number of the nearest showings.</param>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ShowingController.Post(CinemaWpf.Model.Showing)">
            <summary>
            Adds or updates the showing.
            </summary>
            <param name="show"></param>
            <returns>Returns true if command succeed.</returns>
        </member>
        <member name="M:CinemaWpf.Controllers.ShowingController.Delete(CinemaWpf.Model.Showing)">
            <summary>
            Deletes the showing.
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:CinemaWpf.ViewModel.ChooseMovieViewModel">
            <summary>
            Represent ViewModel for ChooseMovieView.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.ChooseMovieViewModel.Movies">
            <summary>
            ObservableCollection which contains list of all movies.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.ChooseMovieViewModel.SelectedMovie">
            <summary>
            SelectedMovie stories a choosing movie.
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ChooseMovieViewModel.#ctor">
            <summary>
            Initializes a ne instance of ChooseMovieViewModel Class.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.ChooseMovieViewModel.ContinueAddShowing">
            <summary>
            Command for continue adding showing.
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ShowingViewModel.#ctor">
            <summary>
            Initalize a new instance of ShowingViewModel class
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ShowingViewModel.#ctor(CinemaWpf.Model.Showing)">
            <summary>
            Initializes a new instance of the ReservationViewModel class with existing movie.
            </summary>
            <param name="model">Reservation to edit.</param>
        </member>
        <member name="P:CinemaWpf.ViewModel.ShowingViewModel.Showing">
            <summary>
            Gets the Reservation instance
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.ShowingViewModel.SaveCommand">
            <summary>
            Gets the SaveCommand for the ViewModel
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ShowingViewModel.saveShowing">
            <summary>
            Saves changes to the showing instance
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ShowingsViewModel.#ctor">
            <summary>
            Initialize a new instance of ReservationsViewModel class.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.MovieInfoViewModel.Info">
            <summary>
            Gets or sets some information.
            </summary>
        </member>
        <member name="T:CinemaWpf.ViewModel.MoviesViewModel">
            <summary>
            Represents ViewModel for MoviesView.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.MoviesViewModel.Movies">
            <summary>
            List of all movies.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.MoviesViewModel.SelectedMovie">
            <summary>
            Movie choosed by a user.
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.MoviesViewModel.#ctor">
            <summary>
            Initialize a new instance of MoviesViewModel class.
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.MovieViewModel.#ctor">
            <summary>
            Initalize a new instance of MovieViewModel class
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.MovieViewModel.#ctor(CinemaWpf.Model.Movie)">
            <summary>
            Initializes a new instance of the MovieViewModel class with existing movie.
            </summary>
            <param name="model">Movie to edit.</param>
        </member>
        <member name="P:CinemaWpf.ViewModel.MovieViewModel.Movie">
            <summary>
            Gets the Movie instance
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.MovieViewModel.SaveCommand">
            <summary>
            Gets the SaveCommand for the ViewModel
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.MovieViewModel.saveMovie">
            <summary>
            Saves changes to the movie instance
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ReservationsViewModel.#ctor">
            <summary>
            Initialize a new instance of ReservationsViewModel class.
            </summary>
        </member>
        <member name="P:CinemaWpf.ViewModel.ReservationViewModel.Reservation">
            <summary>
            Gets the Reservation instance
            </summary>
        </member>
        <member name="M:CinemaWpf.ViewModel.ReservationViewModel.#ctor(CinemaWpf.Model.CustomerReservation)">
            <summary>
            Initializes a new instance of the ReservationViewModel class with existing movie.
            </summary>
            <param name="model">Reservation to edit.</param>
        </member>
        <member name="M:CinemaWpf.ViewModel.ReservationViewModel.saveReservation">
            <summary>
            Saves changes to the reservation instance
            </summary>
        </member>
        <member name="T:CinemaWpf.View.ChooseMovieView">
            <summary>
            Interaction logic for ChooseMovieView.xaml
            </summary>
            <summary>
            ChooseMovieView
            </summary>
        </member>
        <member name="M:CinemaWpf.View.ChooseMovieView.GetInstance">
            <summary>
            Gets an object of ChooseMovieView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.View.ChooseMovieView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.ChooseShowingView">
            <summary>
            Interaction logic for ChooseShowing.xaml
            </summary>
            <summary>
            ChooseShowingView
            </summary>
        </member>
        <member name="M:CinemaWpf.View.ChooseShowingView.GetInstance">
            <summary>
            Gets an object of ChooseShowingView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.View.ChooseShowingView.#ctor">
            <summary>
            Gets instance of ChooseShowingView class.
            </summary>
        </member>
        <member name="M:CinemaWpf.View.ChooseShowingView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.MovieInfoView">
            <summary>
            Interaction logic for MovieInfoView.xaml
            </summary>
            <summary>
            MovieInfoView
            </summary>
        </member>
        <member name="M:CinemaWpf.View.MovieInfoView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.Movies">
            <summary>
            Interaction logic for Movies.xaml
            </summary>
            <summary>
            Movies
            </summary>
        </member>
        <member name="M:CinemaWpf.View.Movies.GetInstance">
            <summary>
            Gets an object of Movies View.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.View.Movies.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.MovieView">
            <summary>
            Interaction logic for MovieView.xaml
            </summary>
            <summary>
            MovieView
            </summary>
        </member>
        <member name="M:CinemaWpf.View.MovieView.GetInstance">
            <summary>
            Gets an object of MovieView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.View.MovieView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.Reperuare">
            <summary>
            Interaction logic for Reperuare.xaml
            </summary>
            <summary>
            Reperuare
            </summary>
        </member>
        <member name="M:CinemaWpf.View.Reperuare.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.Reservations">
            <summary>
            Interaction logic for Reservations.xaml
            </summary>
            <summary>
            Reservations
            </summary>
        </member>
        <member name="M:CinemaWpf.View.Reservations.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.ReservationView">
            <summary>
            Interaction logic for ReservationView.xaml
            </summary>
            <summary>
            ReservationView
            </summary>
        </member>
        <member name="M:CinemaWpf.View.ReservationView.GetInstance">
            <summary>
            Gets an object of ReservationView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.View.ReservationView.#ctor">
            <summary>
            Initialize an instance of ReservationView class.
            </summary>
        </member>
        <member name="M:CinemaWpf.View.ReservationView.#ctor(CinemaWpf.Model.CustomerReservation)">
            <summary>
            Initialize an instance of ReservationView class.
            </summary>
            <param name="model">Model of CustomerReservation Class.</param>
        </member>
        <member name="M:CinemaWpf.View.ReservationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.Showings">
            <summary>
            Interaction logic for Showings.xaml
            </summary>
            <summary>
            Showings
            </summary>
        </member>
        <member name="M:CinemaWpf.View.Showings.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.View.ShowingView">
            <summary>
            Interaction logic for ShowingView.xaml
            </summary>
            <summary>
            ShowingView
            </summary>
        </member>
        <member name="M:CinemaWpf.View.ShowingView.GetInstance">
            <summary>
            Gets an object of ChooseShowingView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CinemaWpf.View.ShowingView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:CinemaWpf.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:CinemaWpf.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:CinemaWpf.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:CinemaWpf.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CinemaWpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CinemaWpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CinemaWpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
